kind: PersistentVolume
apiVersion: v1
metadata:
  name: mysql-pv-volume1
  labels:
    type: local
spec:
  storageClassName: manual
  capacity:
    storage: 10Gi
  accessModes:
    - ReadWriteOnce
  hostPath:
    path: "/data/mysql-pv1"
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: mysql-pvc-claim1
spec:
  storageClassName: manual
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 10Gi
---      
apiVersion: apps/v1
kind: Deployment
metadata:
  name: db-a
  labels:
    app: db-a
spec:
  replicas: 1
  selector:
    matchLabels:
      app: db-a
  strategy:
    type: Recreate
  template:
    metadata:
      labels:
        app: db-a
    spec:
      imagePullSecrets:
        - name: pullsecret
      containers:
        #from docker hub  erdnando/db-fintech
        #from private repo    mx.com.smi.services:30402/db-fintech:latest
      - image: mx.com.smi.services:30402/db-fintech:latest
        name: db-a
        ports:
        - containerPort: 3306
          name: db-a
        volumeMounts:
        - name: mysql-persistent-storage1
          mountPath: /var/lib/mysql
      volumes:
      - name: mysql-persistent-storage1
        persistentVolumeClaim:
          claimName: mysql-pvc-claim1
---
kind: Service
apiVersion: v1
metadata:
  name:  db-lb-a
  labels:
    app: db-lb-a
spec:
  selector:
    app:  db-a
  type:  LoadBalancer
  ports:
  - protocol: "TCP"
    # Port accessible inside cluster
    port: 3306
    # Port to forward to inside the pod
    targetPort: 3306
    # Port accessible outside cluster
    nodePort: 30201